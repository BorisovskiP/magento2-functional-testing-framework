<?php
namespace Magento\AcceptanceTest\_generated\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class PersistenceCustomFieldsTestCest
{
	/**
	  * @var DataPersistenceHandler $createData1;
	  */
	protected $createData1;

	/**
	  * @var DataPersistenceHandler $createData2;
	  */
	protected $createData2;

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _before(AcceptanceTester $I)
	{
		$createData1Fields['firstname'] = "Mac";
		$createData1Fields['lastname'] = "Doe";
		$I->amGoingTo("create entity that has the stepKey: createData1");
		$DefaultPerson = DataObjectHandler::getInstance()->getObject("DefaultPerson");
		$this->createData1 = new DataPersistenceHandler($DefaultPerson, [], $createData1Fields);
		$this->createData1->createEntity();
		$createData2Fields['firstname'] = $this->createData1->getCreatedDataByName('firstname');
		$I->amGoingTo("create entity that has the stepKey: createData2");
		$uniqueData = DataObjectHandler::getInstance()->getObject("uniqueData");
		$this->createData2 = new DataPersistenceHandler($uniqueData, [$this->createData1], $createData2Fields);
		$this->createData2->createEntity();
	}

	/**
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function PersistenceCustomFieldsTest(AcceptanceTester $I)
	{
		$createdDataFields['favoriteIndex'] = "1";
		$createdDataFields['middlename'] = "Kovacs";
		$I->amGoingTo("create entity that has the stepKey: createdData");
		$simpleData = DataObjectHandler::getInstance()->getObject("simpleData");
		$createdData = new DataPersistenceHandler($simpleData, [], $createdDataFields);
		$createdData->createEntity();
		$createdData3Fields['firstname'] = "Takeshi";
		$createdData3Fields['lastname'] = "Kovacs";
		$I->amGoingTo("create entity that has the stepKey: createdData3");
		$UniquePerson = DataObjectHandler::getInstance()->getObject("UniquePerson");
		$createdData3 = new DataPersistenceHandler($UniquePerson, [$createdData], $createdData3Fields);
		$createdData3->createEntity();
		$createDataAG1createdAGFields['firstname'] = "string1";
		$I->amGoingTo("create entity that has the stepKey: createDataAG1createdAG");
		$simpleData = DataObjectHandler::getInstance()->getObject("simpleData");
		$createDataAG1createdAG = new DataPersistenceHandler($simpleData, [], $createDataAG1createdAGFields);
		$createDataAG1createdAG->createEntity();
		$createDataAG2createdAGFields['firstname'] = "Jane";
		$I->amGoingTo("create entity that has the stepKey: createDataAG2createdAG");
		$simpleData = DataObjectHandler::getInstance()->getObject("simpleData");
		$createDataAG2createdAG = new DataPersistenceHandler($simpleData, [], $createDataAG2createdAGFields);
		$createDataAG2createdAG->createEntity();
		$createDataAG3createdAGFields['firstname'] = $createdData3->getCreatedDataByName('firstname');
		$I->amGoingTo("create entity that has the stepKey: createDataAG3createdAG");
		$simpleData = DataObjectHandler::getInstance()->getObject("simpleData");
		$createDataAG3createdAG = new DataPersistenceHandler($simpleData, [], $createDataAG3createdAGFields);
		$createDataAG3createdAG->createEntity();
	}
}
